{"version":3,"sources":["store/dishSlice.js","components/Admin/Sidebar/Sidebar.js","components/Admin/AddDish/AddDish.js","components/Admin/DishList/DishList.js","components/Admin/Admin.js","components/User/User.js","store/loginSlice.js","components/Login/Login.js","App.js","store/userSlice.js","store/store.js","serviceWorker.js","index.js"],"names":["dishSlice","createSlice","name","initialState","id","title","protein","fat","carb","calories","img","reducers","addDish","state","action","newDish","Math","random","payload","push","deleteDish","filter","dish","updateDish","map","actions","dishReducer","dishList","reducer","Sidebar","className","to","onClick","window","location","href","AddDish","dispatch","useDispatch","loginList","useSelector","loginUser","useForm","register","handleSubmit","errors","formState","useState","imageUrl","setImageUrl","added","setAdded","calori","setCalori","user","onSubmit","data","dishProtein","dishFat","dishCarb","Date","now","dishName","dishCar","class","for","placeholder","type","onChange","e","imageData","FormData","set","append","target","files","axios","post","then","res","display_url","catch","error","console","log","bookCover","DishList","dishes","scope","Admin","path","User","searchTerm","setSearchTerm","event","value","toLowerCase","includes","src","alt","loginSlice","addLoginUser","newLoginUser","pass","loginReducer","Login","userList","users","username","setUser","password","setPassword","adminName","setAdminName","adminPassword","setAdminPassword","asAdmin","setAsAdmin","history","useHistory","handleAdmin","preventDefault","onBlur","alert","i","length","App","basename","exact","userSlice","addUser","newUser","userReducer","store","configureStore","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9db07ea1.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst dishSlice = createSlice({\r\n    name: \"dishes\",\r\n    initialState: [\r\n        { id: 1, title: \"Ice Cream\", protein: 4.6, fat: 15, carb: 31, calories: 277.4, img: 'https://images.herzindagi.info/image/2020/Jun/chocolate-parle-g-ice-cream.jpg' },\r\n        { id: 2, title: \"Medium Meatball\", protein: 4, fat: 6.3, carb: 2.3, calories: 345, img: 'https://www.flavcity.com/wp-content/uploads/2018/06/meatballs-tomato-sauce-500x500.jpg' },\r\n        { id: 3, title: \"Milk Shake\", protein: 14, fat: 12, carb: 96, calories: 237, img: 'https://image.freepik.com/free-photo/milkshake-set-table_140725-9239.jpg' }\r\n    ],\r\n    reducers: {\r\n        addDish: (state, action) => {\r\n            const newDish = {\r\n                id: Math.random(),\r\n                title: action.payload.title,\r\n                protein: action.payload.protein,\r\n                fat: action.payload.fat,\r\n                carb: action.payload.carb,\r\n                img: action.payload.img,\r\n                calories: ((action.payload.protein * 4) + (action.payload.fat * 9) + (action.payload.carb * 4)),\r\n            }\r\n            state.push(newDish)\r\n        },\r\n        deleteDish: (state, action) => {\r\n            return(state.filter(dish => dish.id !== action.payload.id))\r\n        },\r\n        updateDish: (state, action) => {\r\n            state.map(dish => {\r\n                if (dish.id === action.payload.id) {\r\n                    dish.title = action.payload.title\r\n                    dish.protein = action.payload.protein\r\n                    dish.fat = action.payload.fat\r\n                    dish.carb = action.payload.carb\r\n                    dish.calories = ((action.payload.protein * 4) + (action.payload.fat * 9) + (action.payload.carb * 4))\r\n                } else {\r\n\r\n                }\r\n            })\r\n        }\r\n    },\r\n})\r\n\r\nexport const { addDish, deleteDish, updateDish, dishList } = dishSlice.actions;\r\nexport const dishReducer = dishSlice.reducer;","\r\nimport React  from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './Sidebar.css'\r\nconst Sidebar = () => {\r\n    const handleLogout = () => {\r\n        window.location.href=\"/\";\r\n    }\r\n    return (\r\n        <div className=\"flex-column sidebar-main\">\r\n            <div className=\"mt-2\"><Link to=\"/addDish\">Add Dishes</Link></div>\r\n            <div className=\"mt-2\"><Link to=\"/dishList\">View Dishes</Link></div>\r\n            <div className=\"mt-2\"><Link to=\"/user\">User Dashboard</Link></div>\r\n            <div className=\"mt-2\"><Link to=\"/login\" onClick={handleLogout}>Log out</Link></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addDish } from '../../../store/dishSlice';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nconst AddDish = () => {\r\n    //initialize dispatch\r\n    const dispatch = useDispatch()\r\n\r\n    //redux state calling\r\n    const loginUser = useSelector((state) => state.loginUser)\r\n    const loginList = loginUser.map(loginUser => loginUser);\r\n\r\n    //react form and image, added dish state\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const [imageUrl, setImageUrl] = useState('https://images.herzindagi.info/image/2020/Jun/chocolate-parle-g-ice-cream.jpg')\r\n    const [added, setAdded] = useState(false)\r\n    const [calori, setCalori] = useState()\r\n\r\n\r\n    //image upload handler\r\n    const handleImageUpload = (e) => {\r\n        const imageData = new FormData()\r\n        imageData.set('key', 'a59c77f7cce19a6af12a528420d40cb6')\r\n        imageData.append('image', e.target.files[0])\r\n        axios.post('https://api.imgbb.com/1/upload', imageData)\r\n            .then(res => setImageUrl(res.data.data.display_url))\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    //Adding dish function\r\n    const onSubmit = data => {\r\n        setCalori((data.dishProtein * 4) + (data.dishFat * 9) + (data.dishCarb * 4))\r\n        data.img = imageUrl;\r\n        dispatch(\r\n            addDish({\r\n                id: Date.now(),\r\n                title: data.dishName,\r\n                protein: data.dishProtein,\r\n                fat: data.dishFat,\r\n                carb: data.dishCar,\r\n                calories: (data.dishProtein * 4) + (data.dishFat * 9) + (data.dishCarb * 4),\r\n                img: data.img,\r\n            }),\r\n        setAdded(true)\r\n        )\r\n    };\r\n    return (\r\n        <>\r\n            {loginList[1]?.user === \"admin\" ? <section className=\"container-fluid\">\r\n                <div className=\"row admin-container\">\r\n                    <div className=\"col-md-2 py-5 sidebar-admin\">\r\n                        <Sidebar></Sidebar>\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                        <div>\r\n                            <h1 className=\"text-center my-3\">Add Dishes From Here</h1>\r\n                            {added && <span className=\"text-success text-center\">Your Dish Has Been Added Successfully</span>}\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className=\"form-row d-flex\">\r\n                                    <div class=\"form-group col-md-5 ml-5\">\r\n                                        <label for=\"dishName\">Dish Name</label>\r\n                                        <input class=\"form-control mb-2\" id=\"dishName\" placeholder=\"Dish Name\" {...register(\"dishName\")} />\r\n                                        <label for=\"dishCar\">Carbohydrate</label>\r\n                                        <input class=\"form-control mb-2\" id=\"dishCar\" placeholder=\"Carb\" {...register(\"dishCar\")} />\r\n                                        <label for=\"dishProtein\">Protein Quantity</label>\r\n                                        <input class=\"form-control mb-2\" id=\"dishProtein\" placeholder=\"Protein Quantity\" {...register(\"dishProtein\")} />\r\n                                    </div>\r\n                                    {/* include validation with required or other standard HTML validation rules */}\r\n                                    <div className=\"form-group col-md-6 mx-2\">\r\n                                        <label for=\"serviceImage\">Dish Image</label>\r\n                                        <input name=\"dishImage\" type=\"file\" onChange={handleImageUpload} className=\"form-control mb-2\" />\r\n                                        {errors.bookCover && <span className=\"d-block text-danger\">* Image is required</span>}\r\n                                        <label for=\"dishFat\">Fat Quantity</label>\r\n                                        <input class=\"form-control mb-2\" id=\"dishFat\" placeholder=\"Fat Quantity\" {...register(\"dishFat\")} />\r\n                                        <label for=\"dishCarb\">Calories</label>\r\n                                        <input class=\"form-control mb-2\" id=\"dishCarb\" placeholder={calori} {...register(\"dishCarb\")} />\r\n                                    </div>\r\n                                    <input class=\"form-control my-2 btn btn-secondary\" type=\"submit\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            :\r\n            <section className=\"container-fluid not-container\">\r\n                <div className=\"text-center align-items-center not-found\">\r\n                    <h2>404 not found!</h2>\r\n                    <p><Link to=\"/login\">Click Here For Login!!</Link></p>\r\n                </div>\r\n            </section>\r\n        }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AddDish;","import React from 'react';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteDish } from '../../../store/dishSlice';\r\n\r\n\r\nconst DishList = () => {\r\n    //dishes state\r\n    const dishes = useSelector((state) => state.dishes)\r\n\r\n    //logged in user state\r\n    const loginUser = useSelector((state) => state.loginUser)\r\n    const loginList = loginUser.map(loginUser => loginUser);\r\n    const dispatch = useDispatch();\r\n    //deleting from redux\r\n    const handleDelete = (id) => {\r\n        dispatch(deleteDish({id: id.id}))\r\n    }\r\n    return (\r\n        \r\n        <>\r\n        {loginList[1]?.user === \"admin\" ? <section className=\"container-fluid\">\r\n                <div className=\"row admin-container\">\r\n                    <div className=\"col-md-2 py-5 sidebar-admin\">\r\n                        <Sidebar></Sidebar>\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                        <div className=\"order-list\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Dish Name</th>\r\n                                        <th scope=\"col\">Carbohydrates</th>\r\n                                        <th scope=\"col\">Protein</th>\r\n                                        <th scope=\"col\">Fat</th>\r\n                                        <th scope=\"col\">Calories</th>\r\n                                        <th scope=\"col\">Remove</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {dishes.map((dish) =>\r\n                                    <tbody key={dish.id}>\r\n                                        <tr key={dish.id}>\r\n                                            <th scope=\"row\">{dish.title}</th>\r\n                                            <td>{dish.protein}</td>\r\n                                            <td>{dish.fat}</td>\r\n                                            <td>{dish.carb}</td>\r\n                                            <td><button className=\"btn btn-secondary\">{dish.calories}</button></td>\r\n                                            <td><button className=\"btn btn-secondary\" onClick={(e) => handleDelete(dish)}>X</button></td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                )}\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section className=\"container-fluid h-100\">\r\n                <div className=\"text-center align-items-center not-found\">\r\n                    <h2>404 not found!</h2>\r\n                    <p><Link to=\"/login\">Click Here For Login!!</Link></p>\r\n                </div>\r\n            </section>\r\n            }\r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default DishList;","import React, { useState } from 'react';\r\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport AddDish from './AddDish/AddDish';\r\nimport './Admin.css'\r\nimport DishList from './DishList/DishList';\r\nimport Sidebar from './Sidebar/Sidebar';\r\n\r\nconst Admin = () => {\r\n    //logged in user state\r\n    const loginUser = useSelector((state) => state.loginUser)\r\n    const loginList = loginUser.map(loginUser => loginUser);\r\n    return (\r\n        <>\r\n        { loginList[1]?.user === \"admin\" ? <section className=\"container-fluid\">\r\n            <div className=\"row admin-container\">\r\n                <div className=\"col-md-2 py-5 sidebar-admin\">\r\n                    <Sidebar></Sidebar>\r\n                </div>\r\n                <div className=\"col-md-10 admin-panel\">\r\n                    <h1>Welcome to admin panel.</h1>\r\n                    <h2>If you want to add dishes <Link to=\"/addDish\">click here</Link></h2>\r\n                    <h2>If you want to see all dish list <Link to=\"/dishList\">click here</Link></h2>\r\n                    <h2>If you want to check users view of the dishes <Link to=\"/user\">click here</Link></h2>\r\n                    <BrowserRouter>\r\n                        <Switch>\r\n                            <Route path=\"/addDish\">\r\n                                <AddDish></AddDish>\r\n                            </Route>\r\n                            <Route path=\"/dishList\">\r\n                                <DishList></DishList>\r\n                            </Route>\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                </div>\r\n            </div>\r\n        </section> \r\n        : \r\n        <section className=\"container-fluid h-100\">\r\n                <div className=\"text-center align-items-center not-found\">\r\n                    <h2>404 not found!</h2>\r\n                    <p><Link to=\"/login\">Click Here For Login!!</Link></p>\r\n                </div>\r\n        </section>\r\n        }\r\n    </>\r\n        \r\n    );\r\n};\r\n\r\nexport default Admin;","import React, { useState } from 'react';\r\nimport './User.css'\r\nimport {  useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst User = () => {\r\n    // calling dishes state for existing dishes\r\n    const dishes = useSelector((state) => state.dishes)\r\n   \r\n    //search functionality\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    //logging out easy way\r\n    const handleLogout = () => {\r\n        window.location.href=\"/\";\r\n    }\r\n\r\n    //calling logged in user state\r\n    const loginUser = useSelector((state) => state.loginUser)\r\n\r\n    //testing if user is exists or not\r\n    if(loginUser[1]){\r\n        return (\r\n            <div className=\"user-container\">\r\n                <div className=\"user-main\">\r\n                    <h1>Welcome to Dashboard , <a href=\"/login\" onClick={handleLogout}>Logout</a></h1>\r\n                    <h2>Dishes are given below, <Link to=\"/addDish\">Add Dish as an Admin</Link></h2>\r\n                    <input type=\"text\" className='search-box' placeholder=\"Search Dishes\" onChange={event => {setSearchTerm(event.target.value)}} />\r\n                    <div className=\"dishes-list\">\r\n                        {dishes.filter((dish) => {\r\n                            if(searchTerm === ''){\r\n                                return dish;\r\n                            } else if (dish.title.toLowerCase().includes(searchTerm.toLowerCase())){\r\n                                return(\r\n                                    <div className=\"dish-container\">\r\n                                        <img src={dish.img} alt=\"use\" />\r\n                                        <div className=\"description\">\r\n                                            <h5>{dish.title}</h5>\r\n                                            <p>Protein : <span>{dish.protein}g</span></p>\r\n                                            <p>Fat: <span>{dish.fat}g</span></p>\r\n                                            <p>Carbohydrates: <span>{dish.carb}g</span></p>\r\n                                            <p>Calories: <span>{dish.calories}g</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }\r\n                        ).map((dish) => \r\n                        <div className=\"dish-container\">\r\n                            <img src={dish.img} alt=\"use\" />\r\n                            <div className=\"description\">\r\n                                <h5>{dish.title}</h5>\r\n                                <p>Protein : <span>{dish.protein}g</span></p>\r\n                                <p>Fat: <span>{dish.fat}g</span></p>\r\n                                <p>Carbohydrates: <span>{dish.carb}g</span></p>\r\n                                <p>Calories: <span>{dish.calories}g</span></p>\r\n                            </div>\r\n                        </div> )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n        <section className=\"container-fluid h-100\">\r\n                <div className=\"text-center align-items-center not-found\">\r\n                    <h2>404 not found!</h2>\r\n                    <p><Link to=\"/login\">Click Here For Login!!</Link></p>\r\n                </div>\r\n        </section>\r\n        )\r\n    }\r\n    \r\n};\r\n\r\nexport default User;","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst loginSlice = createSlice({\r\n    name: \"loginUser\",\r\n    initialState: [\r\n        {}\r\n    ],\r\n    reducers: {\r\n        addLoginUser: (state, action) => {\r\n            const newLoginUser = {\r\n                id: 1,\r\n                user: action.payload.user,\r\n                pass: action.payload.pass,\r\n            }\r\n            state.push(newLoginUser)\r\n        }\r\n    }\r\n})\r\n\r\nexport const { addLoginUser,  loginList} = loginSlice.actions;\r\nexport  const loginReducer = loginSlice.reducer;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { addLoginUser } from '../../store/loginSlice';\r\nimport './Login.css'\r\n\r\n\r\nconst Login = () => {\r\n    const users = useSelector((state) => state.users)\r\n    const userList = users.map(user => user);\r\n    const loginUser = useSelector((state) => state.loginUser)\r\n    const loginList = loginUser.map(loginUser => loginUser);\r\n    console.log(loginList[0])\r\n    //internal states\r\n    const [username, setUser] = useState('');\r\n    const [password, setPassword] = useState('')\r\n    const [adminName, setAdminName] = useState('');\r\n    const [adminPassword, setAdminPassword] = useState('')\r\n    const [asAdmin, setAsAdmin] = useState(false)\r\n\r\n    //history for in app routing\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n\r\n    // console.log(userList[0].username)\r\n    // for (var i = 0; i < userList.length; i++) {\r\n    //     console.log(userList[i].username)\r\n    //     if (userList[i].username === username && userList[i].password === password) {\r\n    //         history.push('/user')\r\n    //     }\r\n    //     else console.log('Wrong user password')\r\n    // }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        for (var i = 0; i < userList.length; i++) {\r\n            if (userList[i].username === username && userList[i].password === password) {\r\n\r\n                history.push('/user')\r\n                dispatch(\r\n                    addLoginUser({\r\n                        id: Date.now(),\r\n                        user: userList[i].username,\r\n                        pass: userList[i].password\r\n                    })\r\n                )\r\n            }\r\n            else if(userList[i].username !== username){\r\n                \r\n            }\r\n            else if(userList[i].password !== password){\r\n                const alt = () => alert(\"wrong username and password!\")\r\n                alt()\r\n            }\r\n            else {\r\n                const alt = () => alert(\"wrong username and password!\")\r\n                alt()\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleAdmin = (e) => {\r\n        e.preventDefault()\r\n        if (asAdmin === false)\r\n            setAsAdmin(true)\r\n        else setAsAdmin(false)\r\n    }\r\n    const handleAdminSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (adminName === \"admin\" && adminPassword === \"1228989\") {\r\n            history.push('/admin')\r\n            dispatch(\r\n                addLoginUser({\r\n                    id: Date.now(),\r\n                    user: 'admin',\r\n                    pass: '1228989'\r\n                })\r\n            )\r\n        }\r\n        else if(adminPassword !== \"1228989\"){\r\n            const alt = () => alert(\"wrong username and password!\")\r\n            alt()\r\n        }\r\n        else {\r\n            const alt = () => alert(\"wrong username and password!\")\r\n            alt()\r\n        } \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"user-wrapper\">\r\n            {asAdmin ?\r\n                <div className=\"login-wrapper login-fadeInDown\">\r\n                    <h2>Please Login As Admin</h2>\r\n                    <input type=\"text\" placeholder=\"Enter Name\" onBlur={e => setAdminName(e.target.value)} />\r\n                    <input type=\"password\" placeholder=\"Enter Password\" onBlur={e => setAdminPassword(e.target.value)} />\r\n                    <input type=\"submit\" onClick={handleAdminSubmit} />\r\n                    <input type=\"submit\" onClick={handleAdmin} value=\"Login As User\" />\r\n                </div> :\r\n                <div className=\"login-wrapper login-fadeInDown\">\r\n                    <h2>Please Login As A User</h2>\r\n                    <input type=\"text\" placeholder=\"Enter User Name\" onBlur={e => setUser(e.target.value)} />\r\n                    <input type=\"password\" placeholder=\"Enter User Password\" onBlur={e => setPassword(e.target.value)} />\r\n                    <input type=\"submit\" onClick={handleSubmit} />\r\n                    <input type=\"submit\" onClick={handleAdmin} value=\"Login As Admin\" />\r\n                </div>\r\n\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Admin from './components/Admin/Admin';\nimport AddDish from './components/Admin/AddDish/AddDish';\nimport DishList from './components/Admin/DishList/DishList';\nimport User from './components/User/User';\nimport Login from './components/Login/Login';\n\nfunction App() {\n  const PUBLIC_URL = 'https://shakil2chowdhury.github.io/healthy-dishes/'\n  const history = useHistory();\n  return (\n    <div>\n      <BrowserRouter history={history} basename={PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/login\"></Redirect>\n          </Route>\n          <Route path=\"/admin\">\n            <Admin></Admin>\n          </Route>\n          <Route path=\"/addDish\">\n            <AddDish></AddDish>\n          </Route>\n          <Route path=\"/dishList\">\n            <DishList></DishList>\n          </Route>\n          <Route path=\"/user\">\n            <User></User>\n          </Route>\n          <Route path=\"/login\">\n            <Login></Login>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst userSlice = createSlice({\r\n    name:\"users\",\r\n    initialState :[\r\n        {username: \"shakil\", password: '1228989'},\r\n        {username: \"shakib\", password: '120120120'},\r\n    ],\r\n    reducers: {\r\n        addUser: (state, action) => {\r\n            const newUser = {\r\n                username: action.payload.username,\r\n                password: action.payload.password\r\n            }\r\n            state.push(newUser)\r\n        },\r\n    }\r\n})\r\n\r\nexport const { addUser,  userList} = userSlice.actions;\r\nexport  const userReducer = userSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\nimport { dishReducer } from './dishSlice'\nimport { userReducer } from './userSlice'\nimport { loginReducer } from './loginSlice'\n\nexport const store = configureStore({\n  reducer: {\n    dishes : dishReducer,\n    users: userReducer,\n    loginUser: loginReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}